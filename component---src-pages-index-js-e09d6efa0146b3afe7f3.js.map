{"version":3,"sources":["webpack:///./src/components/Join.js","webpack:///./src/pages/index.js"],"names":["Join","props","data","useStaticQuery","className","target","href","contactJson","contact_button_link","Home","intro","site","siteMetadata","committees","edges","features","introImageClasses","frontmatter","intro_image_absolute","intro_image_hide_on_mobile","bodyClass","title","name","content","dangerouslySetInnerHTML","__html","html","showButton","intro_image","alt","src","length","map","node","key","id","to","fields","slug","excerpt","image","description"],"mappings":"6FAAA,qCAoBeA,IAjBF,SAAAC,GACX,IAAMC,EAAOC,YAAe,cAS5B,OACE,yBAAKC,UAAU,mBACb,uBAAGC,OAAO,SAASC,KAAMJ,EAAKK,YAAYC,oBAAqBJ,UAAU,UAAzE,mB,kCCfN,4FAwIeK,UAjIF,SAAAR,GACX,IAAMS,EAAQT,EAAMC,KAAKQ,MACnBC,EAAOV,EAAMC,KAAKS,KAAKC,aACvBC,EAAaZ,EAAMC,KAAKW,WAAWC,MACnCC,EAAWd,EAAMC,KAAKa,SAASD,MAC/BE,EAAiB,gBAAkBN,EAAMO,YAAYC,sBAAwB,wBAA5D,KAAsFR,EAAMO,YAAYE,4BAA8B,2BAE7J,OACE,kBAAC,IAAD,CAAQC,UAAU,aAChB,kBAAC,IAAD,CAAKC,MAAOV,EAAKU,QACjB,kBAAC,IAAD,KACE,0BACEC,KAAK,cACLC,QAAQ,yKAIZ,yBAAKnB,UAAU,SACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,+CACb,yBAAKoB,wBAAyB,CAAEC,OAAQf,EAAMgB,QAC9C,kBAAC,IAAD,CAAMC,YAAU,KAEjBjB,EAAMO,YAAYW,aACjB,yBAAKxB,UAAU,iEACb,yBAAKyB,IAAKnB,EAAMO,YAAYI,MAAOjB,UAAWY,EAAmBc,IAAKpB,EAAMO,YAAYW,kBAOjGf,EAAWkB,OAAS,GACnB,yBAAK3B,UAAU,SACb,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,6BACZS,EAAWmB,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACd,yBAAKC,IAAKD,EAAKE,GAAI/B,UAAU,wBAC3B,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,iBACZ,kBAAC,IAAD,CAAMgC,GAAIH,EAAKI,OAAOC,MAAOL,EAAKhB,YAAYI,QAEhD,2BAAIY,EAAKM,kBAUxBxB,EAASgB,OAAS,GACjB,yBAAK3B,UAAU,oBACb,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,8BACZW,EAASiB,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACZ,yBAAKC,IAAKD,EAAKE,GAAI/B,UAAU,iCAC3B,yBAAKA,UAAU,WACZ6B,EAAKO,OACJ,yBAAKpC,UAAU,iBACb,yBAAK0B,IAAKG,EAAKO,SAGnB,wBAAIpC,UAAU,iBAAiB6B,EAAKZ,OACpC,yBAAKjB,UAAU,mBAAmB6B,EAAKQ","file":"component---src-pages-index-js-e09d6efa0146b3afe7f3.js","sourcesContent":["import React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nconst Join = props => {\n  const data = useStaticQuery(graphql`\n    query ContactQuery {\n        contactJson {\n          phone\n          email\n          contact_button_link\n        }\n    }\n   `);\n  return (\n    <div className=\"call-box-bottom\">\n      <a target=\"_blank\" href={data.contactJson.contact_button_link} className=\"button\">Hemen KatÄ±l!</a>\n    </div>\n  );\n};\n\nexport default Join;\n","import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport SEO from '../components/SEO';\nimport Layout from '../components/Layout';\nimport Join from '../components/Join';\n\nconst Home = props => {\n  const intro = props.data.intro;\n  const site = props.data.site.siteMetadata;\n  const committees = props.data.committees.edges;\n  const features = props.data.features.edges;\n  const introImageClasses = `intro-image ${intro.frontmatter.intro_image_absolute && 'intro-image-absolute'} ${intro.frontmatter.intro_image_hide_on_mobile && 'intro-image-hide-mobile'}`;\n\n  return (\n    <Layout bodyClass=\"page-home\">\n      <SEO title={site.title} />\n      <Helmet>\n        <meta\n          name=\"description\"\n          content=\"Small Business Theme. Multiple content types using Markdown and JSON sources. Responsive design and SCSS. This is a beautiful and artfully designed starting theme.\"\n        />\n      </Helmet>\n\n      <div className=\"intro\">\n        <div className=\"container\">\n          <div className=\"row justify-content-start\">\n            <div className=\"col-12 col-md-7 col-lg-6 order-2 order-md-1\">\n              <div dangerouslySetInnerHTML={{ __html: intro.html }} />\n              <Join showButton />\n            </div>\n            {intro.frontmatter.intro_image && (\n              <div className=\"col-12 col-md-5 col-lg-6 order-1 order-md-2 position-relative\">\n                <img alt={intro.frontmatter.title} className={introImageClasses} src={intro.frontmatter.intro_image} />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {committees.length > 0 && (\n        <div className=\"strip\">\n          <div className=\"container pt-6 pb-6 pb-md-10\">\n            <div className=\"row justify-content-start\">\n              {committees.map(({ node }) => (\n                <div key={node.id} className=\"col-12 col-md-4 mb-1\">\n                  <div className=\"service service-summary\">\n                    <div className=\"service-content\">\n                      <h2 className=\"service-title\">\n                        <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\n                      </h2>\n                      <p>{node.excerpt}</p>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {features.length > 0 && (\n        <div className=\"strip strip-grey\">\n          <div className=\"container pt-6 pb-6 pt-md-10 pb-md-10\">\n            <div className=\"row justify-content-center\">\n              {features.map(({ node }) => (\n                <div key={node.id} className=\"col-12 col-md-6 col-lg-3 mb-2\">\n                  <div className=\"feature\">\n                    {node.image && (\n                      <div className=\"feature-image\">\n                        <img src={node.image} />\n                      </div>\n                    )}\n                    <h2 className=\"feature-title\">{node.title}</h2>\n                    <div className=\"feature-content\">{node.description}</div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    committees: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/committees\\/.*/\" } }\n      sort: { fields: [frontmatter___weight], order: ASC }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n    intro: markdownRemark(\n      fileAbsolutePath: {regex: \"/content/index.md/\"}\n    ) {\n        html\n        frontmatter {\n          image\n          intro_image\n          intro_image_absolute\n          intro_image_hide_on_mobile\n          title\n        }\n    }\n    features: allFeaturesJson {\n      edges {\n        node {\n          id\n          title\n          description\n          image\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n\nexport default Home;\n"],"sourceRoot":""}